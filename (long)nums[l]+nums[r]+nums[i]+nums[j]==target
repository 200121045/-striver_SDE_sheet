class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) { 
        int n =nums.size();
        set<vector<int >>st;
        vector<vector<int>>ans;
        sort(nums.begin(), nums.end());
//         if(n<4)return ans;
//         for(int i =0; i<n; i ++){
//             for(int j = i+1; j<n; j++){
//                 int l = j+1;
//                 int r = n-1;
//                 while(l<r){
//                     if((long)nums[l]+nums[r]+nums[i]+nums[j]==target){
//                         st.insert({nums[i],nums[j],nums[l],nums[r]});
//                         l++;
//                         r--;
//                     }
//                     else if((long)nums[l]+nums[r]+nums[i]+nums[j]>target){
//                           r--;
//                     }
//                     else{
//                         l++;
//                     }
//                 }
//             }
//         }
// for(auto it:st){
//     ans.push_back(it);
// }
if(nums.size()<4)return ans;
for(int i =0; i<nums.size(); i++){
   for( int j = i+1; j<n; j++){
        int l = j+1;
        int r = n-1;
        while(l<r){
            if((long)nums[l]+nums[r]+nums[i]+nums[j]==target){
                st.insert({nums[i],nums[j],nums[l],nums[r]});

                l++;
                r--;
            }
            else if((long)nums[l]+nums[r]+nums[i]+nums[j]>target){
                r--;
            }
            else{
                l++;
            }
        }
    }
}
for(auto it:st){
    ans.push_back(it);
}

return ans;
    }
};
